[tox]
envlist = code_analysis,clean,report
skipsdist = True
envdir = {env:CI_PROJECT_DIR}/.tox_envdir/{envname}
# Define global test evn.
[testenv]
passenv =
  # Pass env from Gitlab CI.
  CI_*
  RAYVISION_*
setenv =
  VIRTUAL_ENV={envdir}
  PYTHONHASHSEED=0
  PYCURL_SSL_LIBRARY=openssl
whitelist_externals =
  bash
  pylint
  flake8
  ray-gitlab-ci
install_command = {env:RAYVISION_PIP_COMMAND}

depends =
  {py27,py36}: clean
  report: py27,py36

# Support env list.
[testenv:clean]
skip_install = true
deps = coverage
commands =
  coverage erase

[testenv:report]
skip_install = true
deps = coverage
commands =
  ray-gitlab-ci create_note --project-id {env:CI_PROJECT_ID} --branch-name "{env:CI_BUILD_REF_NAME}" --check-type Coverage --info-file {env:CI_PROJECT_DIR}/cov_report.txt
  ray-gitlab-ci create_note --project-id {env:CI_PROJECT_ID} --branch-name "{env:CI_BUILD_REF_NAME}" --check-type Pylint --info-file {env:CI_PROJECT_DIR}/lint.txt
  ray-gitlab-ci create_note --project-id {env:CI_PROJECT_ID} --branch-name "{env:CI_BUILD_REF_NAME}" --check-type Flake8 --info-file {env:CI_PROJECT_DIR}/flake8.txt

[testenv:code_analysis]
skip_install = true
deps =
    -r{toxinidir}/requirements.txt
    coverage
    pylint
    flake8
    flake8-builtins
    flake8-blind-except
    flake8-docstrings
    flake8-import-order
    flake8-logging-format
commands =
  - bash -c "pylint {env:CI_PROJECT_DIR}/{env:CI_PROJECT_NAME} > {env:CI_PROJECT_DIR}/lint.txt"
  - bash -c "flake8 {env:CI_PROJECT_NAME} > {env:CI_PROJECT_DIR}/flake8.txt"
  - bash -c "coverage report -m > {env:CI_PROJECT_DIR}/cov_report.txt"

[testenv:test]
description = Run pytest.
skip_install = false
deps =
    -r{toxinidir}/requirements.txt
    pytest
    pytest-cov
    pytest-mock
    pip
commands =
  pytest --cov={env:CI_PROJECT_NAME} --cov-append {posargs}
  pip install tqdm

[testenv:deploy]
deps =
    twine
commands =
    pip install requests==2.28.2
    python setup.py bdist_wheel register -r rayvision_pip upload -r rayvision_pip
    python setup.py sdist
    twine upload --repository pypi dist/*

[testenv:pre-commit]
skip_install = true
deps =  pre-commit
commands =
    pre-commit install
    pre-commit run --all-files --show-diff-on-failure

# Seetigns
[flake8]
import-order-style=google
exclude = .venv,.tox,dist,doc,*egg,build,*.pyc
show_source = true
enable-extensions = G
application-import-names = {env:CI_PROJECT_NAME}.
format = pylint
max-line-length = 79
toutput-format = text
ignore = I202,W504,I100


[pylint]
accepted-code-rate = 9
max-line-length = 80


[coverage:report]
include =
  {env:CI_PROJECT_NAME}/*
skip_covered = True
show_missing = True
precision = 2
exclude_lines =
    \#\s*pragma: no cover
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    ^if __name__ == ['"]__main__['"]:$

[coverage:paths]
source =
  {env:CI_PROJECT_NAME}

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 99
known_first_party = tox,tests
known_third_party = appdirs,pkg_resources,setuptools,yaml
